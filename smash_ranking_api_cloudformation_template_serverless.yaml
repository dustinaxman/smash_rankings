AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ImageTag:
    Description: "Tag of the Docker image to pull and run"
    Type: String
    Default: "latest"
  SmashRankerAPIKey:
    Description: "Secret key for the API"
    Type: String
    Default: "smash_ranker_api_secret_key"

Resources:
  SmashRankerLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3DDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource: "arn:aws:s3:::*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  SmashRankerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "SmashRankerFunction"
      Role: !GetAtt SmashRankerLambdaExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Sub "198449958201.dkr.ecr.${AWS::Region}.amazonaws.com/smash-ranker:${ImageTag}"
      MemorySize: 2048
      Timeout: 300
      Environment:
        Variables:
          API_KEY: !Ref SmashRankerAPIKey

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "SmashRankerAPI"
      Description: "API Gateway for SmashRanker Lambda Service"

  ApiGatewayRankingResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "get_ranking"

  ApiGatewayTournamentsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: "query_tournaments"

  ApiGatewayRankingMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayRankingResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SmashRankerLambdaFunction.Arn}/invocations"

  ApiGatewayTournamentsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      ResourceId: !Ref ApiGatewayTournamentsResource
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SmashRankerLambdaFunction.Arn}/invocations"

  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SmashRankerLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*"

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: prod

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
      Name: "SmashRankerAPIKey"
      Value: !Ref SmashRankerAPIKey

  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: "SmashRankerAPIUsagePlan"
      Description: "Usage plan with rate and quota limits for SmashRanker API"
      ApiStages:
        - ApiId: !Ref ApiGatewayRestApi
          Stage: !Ref ApiGatewayDeployment
      Throttle:
        BurstLimit: 100
        RateLimit: 50
      Quota:
        Limit: 100000
        Period: MONTH

  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

Outputs:
  ApiUrlGetRanking:
    Description: "Get Ranking API Gateway URL"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/get_ranking"

  ApiUrlQueryTournaments:
    Description: "Query Tournaments API Gateway URL"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/query_tournaments"